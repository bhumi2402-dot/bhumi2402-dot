section .data
    string db 'Bhumika',10,0
    len equ $ - string

section .text
    global _start

_start:
    mov ecx, string
    call toUpper
    call print
    mov eax, 1
    mov ebx, 0
    int 80h

toUpper:
    mov al, [ecx]      ; ECX is the pointer, so [ECX] is the current char
    cmp al, 0          ; Check if it's the null terminator
    je done
    cmp al, 'a'        ; Check if it's less than 'a'
    jb next_char
    cmp al, 'z'        ; Check if it's greater than 'z'
    ja next_char
    sub al, 0x20       ; Convert to uppercase by subtracting 32 (0x20)
    mov [ecx], al      ; Write it back to the string

next_char:
    inc ecx
    jmp toUpper

done:
    ret

print:
    mov ecx, string    ; What to print
    mov edx, len       ; Length of string to be printed
    mov ebx, 1         ; File descriptor (stdout)
    mov eax, 4         ; Syscall number for sys_write
    int 80h            ; Call kernel
    ret
